/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : AppClass.sm
 */

#ifndef _APPCLASS_SM_H
#define _APPCLASS_SM_H

#include <assert.h>
#include <statemap.h>


struct AppClass;
struct AppClassContext;

struct AppClassState {
    void(*EOS)(struct AppClassContext *const fsm);
    void(*One)(struct AppClassContext *const fsm);
    void(*Unknown)(struct AppClassContext *const fsm);
    void(*Zero)(struct AppClassContext *const fsm);
    void(*Default)(struct AppClassContext *const fsm);
    STATE_MEMBERS
};

extern const struct AppClassState Map1_Start;
extern const struct AppClassState Map1_Zeros;
extern const struct AppClassState Map1_Ones;
extern const struct AppClassState Map1_OK;
extern const struct AppClassState Map1_Error;

struct AppClassContext {
    struct AppClass *_owner;
    FSM_MEMBERS(AppClass)
};

#ifdef NO_APPCLASS_SM_MACRO
extern void AppClassContext_Init(struct AppClassContext *const fsm, struct AppClass *const owner);
extern void AppClassContext_EOS(struct AppClassContext *const fsm);
extern void AppClassContext_One(struct AppClassContext *const fsm);
extern void AppClassContext_Unknown(struct AppClassContext *const fsm);
extern void AppClassContext_Zero(struct AppClassContext *const fsm);
#else
#define AppClassContext_Init(fsm, owner) \
    FSM_INIT((fsm), &Map1_Start); \
    (fsm)->_owner = (owner)

#define AppClassContext_EOS(fsm) \
    assert(getState(fsm) != NULL); \
    setTransition((fsm), "EOS"); \
    getState(fsm)->EOS((fsm)); \
    setTransition((fsm), NULL)

#define AppClassContext_One(fsm) \
    assert(getState(fsm) != NULL); \
    setTransition((fsm), "One"); \
    getState(fsm)->One((fsm)); \
    setTransition((fsm), NULL)

#define AppClassContext_Unknown(fsm) \
    assert(getState(fsm) != NULL); \
    setTransition((fsm), "Unknown"); \
    getState(fsm)->Unknown((fsm)); \
    setTransition((fsm), NULL)

#define AppClassContext_Zero(fsm) \
    assert(getState(fsm) != NULL); \
    setTransition((fsm), "Zero"); \
    getState(fsm)->Zero((fsm)); \
    setTransition((fsm), NULL)
#endif

#endif

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
